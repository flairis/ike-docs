{
    "name": "ray.data.read_api.from_pandas",
    "signature": "ray.data.read_api.from_pandas(dfs: Union[ForwardRef('pandas.DataFrame'), List[ForwardRef('pandas.DataFrame')]], override_num_blocks: Optional[int] = None) -> ray.data.dataset.MaterializedDataset",
    "summary": "Create a :class:`~ray.data.Dataset` from a list of pandas dataframes.",
    "desc": null,
    "args": [
        {
            "name": "dfs",
            "type": null,
            "desc": "A pandas dataframe or a list of pandas dataframes."
        },
        {
            "name": "override_num_blocks",
            "type": null,
            "desc": "Override the number of output blocks from all read tasks.\nBy default, the number of output blocks is dynamically decided based on\ninput data size and available resources. You shouldn't manually set this\nvalue in most cases."
        }
    ],
    "returns": ":class:`~ray.data.Dataset` holding data read from the dataframes.",
    "examples": [
        {
            "desc": null,
            "code": ">>> import pandas as pd\n >>> import ray\n >>> df = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n >>> ray.data.from_pandas(df)\n MaterializedDataset(num_blocks=1, num_rows=3, schema={a: int64, b: int64})\n\nCreate a Ray Dataset from a list of Pandas DataFrames.\n\n >>> ray.data.from_pandas([df, df])\n MaterializedDataset(num_blocks=2, num_rows=6, schema={a: int64, b: int64})"
        }
    ]
}