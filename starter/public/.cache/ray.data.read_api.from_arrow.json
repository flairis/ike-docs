{
    "name": "ray.data.read_api.from_arrow",
    "signature": "ray.data.read_api.from_arrow(tables: Union[ForwardRef('pyarrow.Table'), bytes, List[Union[ForwardRef('pyarrow.Table'), bytes]]]) -> ray.data.dataset.MaterializedDataset",
    "summary": "Create a :class:`~ray.data.Dataset` from a list of PyArrow tables.",
    "desc": null,
    "args": [
        {
            "name": "tables",
            "type": null,
            "desc": "A PyArrow table, or a list of PyArrow tables,\nor its streaming format in bytes."
        }
    ],
    "returns": ":class:`~ray.data.Dataset` holding data from the PyArrow tables.",
    "examples": [
        {
            "desc": null,
            "code": ">>> import pyarrow as pa\n>>> import ray\n>>> table = pa.table({\"x\": [1]})\n>>> ray.data.from_arrow(table)\nMaterializedDataset(num_blocks=1, num_rows=1, schema={x: int64})\n\nCreate a Ray Dataset from a list of PyArrow tables.\n\n>>> ray.data.from_arrow([table, table])\nMaterializedDataset(num_blocks=2, num_rows=2, schema={x: int64})"
        }
    ]
}