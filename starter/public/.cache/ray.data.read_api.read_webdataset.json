{
    "name": "ray.data.read_api.read_webdataset",
    "signature": "ray.data.read_api.read_webdataset(paths: Union[str, List[str]], *, filesystem: Optional[ForwardRef('pyarrow.fs.FileSystem')] = None, parallelism: int = -1, arrow_open_stream_args: Optional[Dict[str, Any]] = None, meta_provider: Optional[ray.data.datasource.file_meta_provider.BaseFileMetadataProvider] = None, partition_filter: Optional[ray.data.datasource.partitioning.PathPartitionFilter] = None, decoder: Union[bool, str, <built-in function callable>, list, NoneType] = True, fileselect: Union[list, <built-in function callable>, NoneType] = None, filerename: Union[list, <built-in function callable>, NoneType] = None, suffixes: Union[list, <built-in function callable>, NoneType] = None, verbose_open: bool = False, shuffle: Optional[Literal['files']] = None, include_paths: bool = False, file_extensions: Optional[List[str]] = None, concurrency: Optional[int] = None, override_num_blocks: Optional[int] = None) -> ray.data.dataset.Dataset",
    "summary": "Create a :class:`~ray.data.Dataset` from",
    "desc": "`WebDataset <https://webdataset.github.io/webdataset/>`_ files.",
    "args": [
        {
            "name": "paths",
            "type": null,
            "desc": "A single file/directory path or a list of file/directory paths.\nA list of paths can contain both files and directories."
        },
        {
            "name": "filesystem",
            "type": null,
            "desc": "The filesystem implementation to read from."
        },
        {
            "name": "parallelism",
            "type": null,
            "desc": "This argument is deprecated. Use ``override_num_blocks`` argument."
        },
        {
            "name": "arrow_open_stream_args",
            "type": null,
            "desc": "Key-word arguments passed to\n`pyarrow.fs.FileSystem.open_input_stream <https://arrow.apache.org/docs/python/generated/pyarrow.fs.FileSystem.html>`_.\nTo read a compressed TFRecord file,\npass the corresponding compression type (e.g. for ``GZIP`` or ``ZLIB``, use\n``arrow_open_stream_args={'compression': 'gzip'}``)."
        },
        {
            "name": "meta_provider",
            "type": null,
            "desc": "File metadata provider. Custom metadata providers may\nbe able to resolve file metadata more quickly and/or accurately. If\n``None``, this function uses a system-chosen implementation."
        },
        {
            "name": "partition_filter",
            "type": null,
            "desc": "Path-based partition filter, if any. Can be used\nwith a custom callback to read only selected partitions of a dataset."
        },
        {
            "name": "decoder",
            "type": null,
            "desc": "A function or list of functions to decode the data."
        },
        {
            "name": "fileselect",
            "type": null,
            "desc": "A callable or list of glob patterns to select files."
        },
        {
            "name": "filerename",
            "type": null,
            "desc": "A function or list of tuples to rename files prior to grouping."
        },
        {
            "name": "suffixes",
            "type": null,
            "desc": "A function or list of suffixes to select for creating samples."
        },
        {
            "name": "verbose_open",
            "type": null,
            "desc": "Whether to print the file names as they are opened."
        },
        {
            "name": "shuffle",
            "type": null,
            "desc": "If setting to \"files\", randomly shuffle input files order before read.\nDefaults to not shuffle with ``None``."
        },
        {
            "name": "include_paths",
            "type": null,
            "desc": "If ``True``, include the path to each file. File paths are\nstored in the ``'path'`` column."
        },
        {
            "name": "file_extensions",
            "type": null,
            "desc": "A list of file extensions to filter files by."
        },
        {
            "name": "concurrency",
            "type": null,
            "desc": "The maximum number of Ray tasks to run concurrently. Set this\nto control number of tasks to run concurrently. This doesn't change the\ntotal number of tasks run or the total number of output blocks. By default,\nconcurrency is dynamically decided based on the available resources."
        },
        {
            "name": "override_num_blocks",
            "type": null,
            "desc": "Override the number of output blocks from all read tasks.\nBy default, the number of output blocks is dynamically decided based on\ninput data size and available resources. You shouldn't manually set this\nvalue in most cases."
        }
    ],
    "returns": "A :class:`~ray.data.Dataset` that contains the example features.",
    "examples": []
}